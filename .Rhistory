# Visualizar os dados
ggplot(dados, aes(x = Homens)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'blue', alpha = 0.7) +
geom_density(alpha = .2, fill = "blue") +
labs(title = "Homens",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15)) +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.title.x = element_text(size = 15))
# Visualizar os dados
ggplot(dados, aes(x = Homens)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'blue', alpha = 0.7) +
geom_density(alpha = .2, fill = "blue") +
labs(title = "Homens",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 15))
# Visualizar os dados
ggplot(dados, aes(x = Homens)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'blue', alpha = 0.7) +
geom_density(alpha = .2, fill = "blue") +
labs(title = "Homens",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
ggplot(dados, aes(x = Mulheres)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'red', alpha = 0.7) +
geom_density(alpha = .2, fill = "#FF6666") +
labs(title = "Mulheres",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
var.test(dados$Homens, dados$Mulheres, alternative = "two.sided", conf.level = 0.95) # Teste F de variância. O default é "two.sided".
t.test(dados$Mulheres, dados$Homens, var.equal = TRUE, alternative = "greater") #Aqui, alternative = "greater" especifica que estamos testando a hipótese alternativa de que a média de Mulheres é maior que a de Homens. Se o valor-p for menor que o nível de significância (geralmente 0.05), você pode rejeitar a hipótese nula e concluir que a média de Mulheres é significativamente maior do que a de Homens.
# Criar um boxplot ( já indica médias diferentes)
boxplot(dados$Homens, dados$Mulheres, names = c("Homens", "Mulheres"),
main = "Boxplot para Homens e Mulheres",
ylab = "Valores",
col = c("blue", "red"))
t.test(dados$Mulheres, dados$Homens, var.equal = TRUE, alternative = "greater") #Aqui, alternative = "greater" especifica que estamos testando a hipótese alternativa de que a média de Mulheres é maior que a de Homens. Se o valor-p for menor que o nível de significância (geralmente 0.05), você pode rejeitar a hipótese nula e concluir que a média de Mulheres é significativamente maior do que a de Homens.
var.test(dados$Homens, dados$Mulheres, alternative = "two.sided", conf.level = 0.95) # Teste F de variância. O default é "two.sided".
t.test(dados$Mulheres, dados$Homens, var.equal = TRUE, alternative = "greater") #Aqui, alternative = "greater" especifica que estamos testando a hipótese alternativa de que a média de Mulheres é maior que a de Homens. Se o valor-p for menor que o nível de significância (geralmente 0.05), você pode rejeitar a hipótese nula e concluir que a média de Mulheres é significativamente maior do que a de Homens.
citations <- function(includeURL = TRUE, includeRStudio = TRUE) {
if(includeRStudio == TRUE) {
ref.rstudio <- RStudio.Version()$citation
if(includeURL == FALSE) {
ref.rstudio$url <- NULL;
}
print(ref.rstudio, style = 'text')
cat('\n')
}
cit.list <- c('base', names(sessionInfo()$otherPkgs))
for(i in 1:length(cit.list)) {
ref <- citation(cit.list[i])
if(includeURL == FALSE) {
ref$url <- NULL;
}
print(ref, style = 'text')
cat('\n')
}
}
library(ggplot2)
citations()
citations <- function(includeURL = TRUE, includeRStudio = TRUE) {
if(includeRStudio == TRUE) {
ref.rstudio <- RStudio.Version()$citation
if(includeURL == FALSE) {
ref.rstudio$url <- NULL;
}
print(ref.rstudio, style = 'text')
cat('\n')
}
cit.list <- c('base', names(sessionInfo()$otherPkgs))
for(i in 1:length(cit.list)) {
ref <- citation(cit.list[i])
if(includeURL == FALSE) {
ref$url <- NULL;
}
print(ref, style = 'text')
cat('\n')
}
}
library(ggplot2)
citations()
library(phytools)
citations()
# Visualizar os dados
ggplot(dados, aes(x = Publico)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'green', alpha = 0.7) +
geom_density(alpha = .2, fill = "green") +
labs(title = "Público",
x = "Valores",
y = "Densidade")
# Visualizar os dados
library(GGPLOT2)
library(ggplot2)
# Visualizar os dados
ggplot(dados, aes(x = Publico)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'green', alpha = 0.7) +
geom_density(alpha = .2, fill = "green") +
labs(title = "Público",
x = "Valores",
y = "Densidade")
ggplot(dados, aes(x = Privado)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'purple', alpha = 0.7) +
geom_density(alpha = .2, fill = "purple") +
labs(title = "Privado",
x = "Valores",
y = "Densidade")
# Visualizar os dados
ggplot(dados, aes(x = Publico)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'green', alpha = 0.7) +
geom_density(alpha = .2, fill = "green") +
labs(title = "Público",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
ggplot(dados, aes(x = Privado)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'purple', alpha = 0.7) +
geom_density(alpha = .2, fill = "purple") +
labs(title = "Privado",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
shapiro.test(dados$Publico) # Avaliar normalidade.  p-value = 0.7286 > 0.05  __ dados sao normais
# Teste de normalidade de Shapiro-Wilk dos dados de Publico
shapiro.test(dados$Publico) # Avaliar normalidade.  p-value = 0.7286 > 0.05  __ dados sao normais
# Teste de normalidade de Shapiro-Wilk dos dados de Privado
shapiro.test(dados$Privado) # Avaliar normalidade.  p-value = 0.637 > 0.2027  __ dados sao normais
# Criar um boxplot
boxplot(dados$Privado, dados$Publico, names = c("Privado", "Publico"),
main = "Boxplot para Privado e Publico",
ylab = "Valores",
col = c("green", "purple"))
# Criar um boxplot
boxplot(dados$Privado, dados$Publico, names = c("Privado", "Publico"),
main = "Boxplot para as redes Privada e Pública",
ylab = "Valores",
col = c("green", "purple"))
# Criar um boxplot
boxplot(dados$Privado, dados$Publico, names = c("Privada", "Pública"),
main = "Boxplot para as redes Privada e Pública",
ylab = "Valores",
col = c("green", "purple"))
# Visualizar os dados
ggplot(dados, aes(x = Publico)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'green', alpha = 0.7) +
geom_density(alpha = .2, fill = "green") +
labs(title = "Pública",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
ggplot(dados, aes(x = Privado)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'purple', alpha = 0.7) +
geom_density(alpha = .2, fill = "purple") +
labs(title = "Privada",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Teste F de comparação de variâncias
var.test(dados$Publico, dados$Privado, alternative = "two.sided", conf.level = 0.95)
# Teste t de comparação de médias
t.test(dados$Privado, dados$Publico, var.equal = TRUE, alternative = "two.sided", conf.level = 0.95)
summary(lm(QTDE ~ ANO, dataset_anos))   ---> #CORRELAÇÃO SIGNIFICATIVA E POSITIVA. ENTAO A VIOLENCIA AUMENTOU COM O PASSSAR DOS ANOIS
# Carregar as bibliotecas necessárias
library(ggplot2)
# Importar os dados que serão utilizados
dados_anos <- read.csv2("dataset_anos.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
# Importar os dados que serão utilizados
dados_anos <- read.csv2("dataset-anos.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
View(dados_anos)
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade",
pch = 19,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$QTDE, dados_anos$ANO,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade",
pch = 19,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$QTDE, dados_anos$ANO,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade",
pch = 19,     # Tipo de ponto
col = "blue")
plot(dados_anos$QTDE, dados_anos$ANO)
# Importar os dados que serão utilizados
dados_anos <- read.csv2("dataset-anos.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
#Gráfico de dispersao
plot(dados_anos$QTDE, dados_anos$ANO),
#Gráfico de dispersao
plot(dados_anos$QTDE, dados_anos$ANO,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade",
pch = 19,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade",
pch = 19,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 19,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 18,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 7,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 10,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 1,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 2,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 3,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 4,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 20,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 23,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 50,     # Tipo de ponto
col = "blue")
#Gráfico de dispersao
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 19,     # Tipo de ponto
col = "blue")
#Regressão linear
summary(lm(QTDE ~ ANO, data = dados_anos))  # ---> #CORRELAÇÃO SIGNIFICATIVA E POSITIVA. ENTAO A VIOLENCIA AUMENTOU COM O PASSSAR DOS ANOIS
#Regressão linear
regressao <- lm(QTDE ~ ANO, data = dados_anos)  # ---> #CORRELAÇÃO SIGNIFICATIVA E POSITIVA. ENTAO A VIOLENCIA AUMENTOU COM O PASSSAR DOS ANOIS
summary(regressao)
plot(regressao)
summary(regressao)
predict(regressao, 2023)
predict(regressao, c(2023)
predict(regressao, c(2023))
predict(regressao, c(2023, 2023))
novos_dados <- data.frame(ANO = c(2023, 2024, 2025))
predict(regressao,novos_dados)
# Carregar as bibliotecas necessárias
library(ggplot2)
# Importar os dados que serão utilizados
dados <- read.csv2("dataset.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
rownames(dados) <- dados$Capital
dados <- dados[,-1]
View(dados)
# Visualizar a distribuição dos dados de Homens
ggplot(dados, aes(x = Homens)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'blue', alpha = 0.7) +
geom_density(alpha = .2, fill = "blue") +
labs(title = "Homens",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Visualizar a distribuição dos dados de Mulheres
ggplot(dados, aes(x = Mulheres)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'red', alpha = 0.7) +
geom_density(alpha = .2, fill = "#FF6666") +
labs(title = "Mulheres",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Teste de normalidade de Shapiro-Wilk dos dados de Homens
shapiro.test(dados$Homens)
# Visualizar os dados com boxplot
boxplot(dados$Homens, dados$Mulheres, names = c("Homens", "Mulheres"),
main = "Boxplot para Homens e Mulheres",
ylab = "Valores",
col = c("blue", "red"))
# Teste F de comparação de variâncias
var.test(dados$Homens, dados$Mulheres, alternative = "two.sided", conf.level = 0.95)
# Teste t comparação de médias
t.test(dados$Mulheres, dados$Homens, var.equal = TRUE, alternative = "greater")
# Importar os dados que serão utilizados
dados <- read.csv2("dataset.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
rownames(dados) <- dados$Capital
dados <- dados[,-1]
View(dados)
# Visualizar os dados da rede Pública
ggplot(dados, aes(x = Publica)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'green', alpha = 0.7) +
geom_density(alpha = .2, fill = "green") +
labs(title = "Pública",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Visualizar os dados da rede Privada
ggplot(dados, aes(x = Privada)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'purple', alpha = 0.7) +
geom_density(alpha = .2, fill = "purple") +
labs(title = "Privada",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Teste de normalidade de Shapiro-Wilk dos dados da rede Publica
shapiro.test(dados$Publica)
# Teste de normalidade de Shapiro-Wilk dos dados da rede Privada
shapiro.test(dados$Privada)
# Visualizar os dados com boxplot
boxplot(dados$Privada, dados$Publico, names = c("Privada", "Pública"),
main = "Boxplot para as redes Privada e Pública",
ylab = "Valores",
col = c("green", "purple"))
# Visualizar os dados com boxplot
boxplot(dados$Privada, dados$Publica, names = c("Privada", "Pública"),
main = "Boxplot para as redes Privada e Pública",
ylab = "Valores",
col = c("green", "purple"))
# Teste F de comparação de variâncias
var.test(dados$Publica, dados$Privada, alternative = "two.sided", conf.level = 0.95)
# Teste t de comparação de médias
t.test(dados$Privada, dados$Publica, var.equal = TRUE, alternative = "two.sided", conf.level = 0.95)
# Teste t de comparação de médias
t.test(dados$Publica, dados$Privada, var.equal = TRUE, alternative = "greater") #Aqui, alternative = "greater" especifica que estamos testando a hipótese alternativa de que a média de publico é maior que a de privado Se o valor-p for menor que o nível de significância (geralmente 0.05), você pode rejeitar a hipótese nula e concluir que a média de publico é significativamente maior do que a de privado
# Visualizar os dados com boxplot
boxplot(dados$Privada, dados$Publica, names = c("Privada", "Pública"),
main = "Boxplot para as redes Privada e Pública",
ylab = "Valores",
col = c("green", "purple"))
# Teste F de comparação de variâncias
var.test(dados$Publica, dados$Privada, alternative = "two.sided", conf.level = 0.95)
# Teste t de comparação de médias
t.test(dados$Publica, dados$Privada, var.equal = TRUE, alternative = "greater")
# Importar os dados que serão utilizados
dados_anos <- read.csv2("dataset-anos.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
View(dados_anos)
#Gráfico de dispersão
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 19,     # Tipo de ponto
col = "blue")
#Regressão linear
summary(lm(QTDE ~ ANO, data = dados_anos))
# Carregar as bibliotecas necessárias
library(ggplot2)
# Importar os dados que serão utilizados
dados <- read.csv2("dataset.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
rownames(dados) <- dados$Capital
dados <- dados[,-1]
View(dados)
# Visualizar a distribuição dos dados de Homens
ggplot(dados, aes(x = Homens)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'blue', alpha = 0.7) +
geom_density(alpha = .2, fill = "blue") +
labs(title = "Homens",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Visualizar a distribuição dos dados de Mulheres
ggplot(dados, aes(x = Mulheres)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'red', alpha = 0.7) +
geom_density(alpha = .2, fill = "#FF6666") +
labs(title = "Mulheres",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Teste de normalidade de Shapiro-Wilk dos dados de Homens
shapiro.test(dados$Homens)
# Teste de normalidade de Shapiro-Wilk dos dados de Mulheres
shapiro.test(dados$Mulheres)
# Visualizar os dados com boxplot
boxplot(dados$Homens, dados$Mulheres, names = c("Homens", "Mulheres"),
main = "Boxplot para Homens e Mulheres",
ylab = "Valores",
col = c("blue", "red"))
# Teste F de comparação de variâncias
var.test(dados$Homens, dados$Mulheres, alternative = "two.sided", conf.level = 0.95)
# Teste t comparação de médias
t.test(dados$Mulheres, dados$Homens, var.equal = TRUE, alternative = "greater")
# Visualizar a distribuição dos dados da rede Pública
ggplot(dados, aes(x = Publica)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'green', alpha = 0.7) +
geom_density(alpha = .2, fill = "green") +
labs(title = "Pública",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Visualizar a distribuição dos dados da rede Privada
ggplot(dados, aes(x = Privada)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = 'purple', alpha = 0.7) +
geom_density(alpha = .2, fill = "purple") +
labs(title = "Privada",
x = "Valores",
y = "Densidade") +
theme(axis.title.y = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
# Teste de normalidade de Shapiro-Wilk dos dados da rede Publica
shapiro.test(dados$Publica)
# Teste de normalidade de Shapiro-Wilk dos dados da rede Privada
shapiro.test(dados$Privada)
# Visualizar os dados com boxplot
boxplot(dados$Privada, dados$Publica, names = c("Privada", "Pública"),
main = "Boxplot para as redes Privada e Pública",
ylab = "Valores",
col = c("green", "purple"))
# Teste F de comparação de variâncias
var.test(dados$Publica, dados$Privada, alternative = "two.sided", conf.level = 0.95)
# Teste t de comparação de médias
t.test(dados$Publica, dados$Privada, var.equal = TRUE, alternative = "greater")
# Importar os dados que serão utilizados
dados_anos <- read.csv2("dataset-anos.csv", header = TRUE, sep = ";", stringsAsFactors = FALSE)
View(dados_anos)
#Gráfico de dispersão
plot(dados_anos$ANO, dados_anos$QTDE,
main = "Gráfico de Dispersão de QTDE por ANO",
xlab = "Ano",
ylab = "Quantidade (%)",
pch = 19,     # Tipo de ponto
col = "blue")
#Regressão linear
summary(lm(QTDE ~ ANO, data = dados_anos))
